<UserControl
  x:Class="ArcFlashCalculator.WPF.Views.FormView" 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:extended="clr-namespace:ArcFlashCalculator.WPF"
  xmlns:controls="clr-namespace:ArcFlashCalculator.WPF.Controls"
  xmlns:converters="clr-namespace:ArcFlashCalculator.WPF.Converters"
  xmlns:prism="http://prismlibrary.com/"
  prism:ViewModelLocator.AutoWireViewModel="True"
  mc:Ignorable="d" 
  Height="Auto" 
  Width="Auto" 
  Background="White"
  xmlns:localString = "clr-namespace:ArcFlashCalculator.Core.Locals;assembly=ArcFlashCalculator.Core"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
  <UserControl.Resources>
    <converters:DecimalConverter x:Key="DecimalConverter" />
    <converters:BoolInverterConverter x:Key="BooleanConverter" />
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="FontSize" Value="18"/>
      <Setter Property="Foreground" Value="#FF38A648"/>
      <Setter Property="FontWeight" Value="Bold"/>
      <Setter Property="Margin" Value="10"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ErrorMessageTextBlockStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="FontSize" Value="13"/>
      <Setter Property="Foreground" Value="Red"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ErrorMessageTextBlockStyleSensor" TargetType="{x:Type TextBlock}">
      <Setter Property="FontSize" Value="13"/>
      <Setter Property="Foreground" Value="Red"/>
      <Setter Property="Margin" Value="0,15,0,0"/>
    </Style>
    <Style x:Key="FieldTextBlockStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="FontSize" Value="13"/>
      <Setter Property="HorizontalAlignment" Value="Right"/>
      <Setter Property="Margin" Value="10,5"/>
    </Style>
    <ControlTemplate x:Key="ErrorTemplate">
      <Grid>
        <AdornedElementPlaceholder x:Name="ErrorImage" Visibility="Collapsed">
          <Image Source="../Images/error.png" 
			ToolTip="{Binding Path=(Validation.Errors)[0].ErrorContent}"
			HorizontalAlignment="Right"
			Margin="0,0,-20,0"
			Width="16"
			Height="16"/>
        </AdornedElementPlaceholder>
      </Grid>
      <ControlTemplate.Triggers>
        <DataTrigger Binding="{Binding ElementName=ErrorImage,Path=AdornedElement.IsEnabled}" Value="true">
          <Setter TargetName="ErrorImage" Property="Visibility" Value="Visible" />
        </DataTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="RadioButtonErrorTemplate">
      <Border BorderThickness="0">
        <AdornedElementPlaceholder />
      </Border>
    </ControlTemplate>
    <Style TargetType="RadioButton">
      <Setter Property="Validation.ErrorTemplate" Value="{StaticResource RadioButtonErrorTemplate}"></Setter>
    </Style>
    <Style TargetType="ComboBox">
      <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"></Setter>
      <Setter Property="FontSize" Value="14"></Setter>
      <Setter Property="Height" Value="25"></Setter>
    </Style>
    <Style TargetType="TextBox">
      <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"></Setter>
      <Setter Property="FontSize" Value="14"></Setter>
      <Setter Property="Margin" Value="0,5,0,5"/>
      <Setter Property="Height" Value="25"></Setter>
      <Style.Triggers>
        <Trigger Property="Validation.HasError" Value="True">
          <Setter Property="BorderBrush" Value="Red"></Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="AsterixStyle" TargetType="TextBlock">
      <Setter Property="Foreground" Value="Red"/>
      <Setter Property="HorizontalAlignment" Value="Right"/>
      <Setter Property="Margin" Value="0,2,5,0"/>
    </Style>
    <ControlTemplate x:Key="PopupTemplate">
      <Grid Width="250" Height="Auto" Margin="{Binding LeftToolTipMargin}" Canvas.ZIndex="1000">
        <Rectangle Stroke="Black" Fill="Black" RadiusX="6" RadiusY="6" Margin="20 0 0 0"/>
        <Path Stroke="Black" Fill="Black" Data="M 0 25 L 40 0 40 50"/>
        <TextBlock Text="{Binding ToolTipText}" Foreground="White" TextAlignment="Center" Margin="20,0,0,0" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap"/>
      </Grid>
    </ControlTemplate>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"></RowDefinition>
      <RowDefinition Height="*"></RowDefinition>
    </Grid.RowDefinitions>
    <Grid x:Name="HeaderGrid" Grid.Row="0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="230"/>
        <ColumnDefinition Width="148*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="40"></RowDefinition>
      </Grid.RowDefinitions>
      <Rectangle Grid.ColumnSpan="8" Fill="#FFEEEEEF" Margin="0,0,0,2"/>
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1" Visibility="{Binding HasErrors, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}">
        <Image x:Name="HeaderWarningImage" Source="../Images/warning.png" Height="20" VerticalAlignment="Center"/>
        <Label x:Name="HeaderWarningLabel" Content="Required information is missing. Please complete all required fields to continue." FontWeight="Bold" VerticalAlignment="Center" />
      </StackPanel>
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1" Visibility="{Binding HasRangeErrors, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}">
        <Image x:Name="HeaderErrorImage" Source="../Images/error.png" Height="20" VerticalAlignment="Center"/>
        <Label x:Name="ErrorCountLabel" FontWeight="Bold" Foreground="Red" VerticalAlignment="Center" Content="{Binding ErrorCount}" />
        <Label x:Name="ErrorTextLabel" Content="error" FontWeight="Bold" Foreground="Red" VerticalAlignment="Center" />
      </StackPanel>
      <TextBlock x:Name="HeaderLabel" Grid.Column="0" Text="WORKING CONDITIONS" Style="{StaticResource HeaderStyle}"/>
    </Grid>
    <controls:CustomScrollViewer x:Name="mainViewer" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid x:Name="FormGrid">
        <Grid.RowDefinitions>
          <extended:RowDefinitionExtended Height="35" />
          <extended:RowDefinitionExtended Height="20" />
          <extended:RowDefinitionExtended Height="35" />
          <extended:RowDefinitionExtended Height="20" />
          <extended:RowDefinitionExtended Height="35" />
          <extended:RowDefinitionExtended Height="20" />
          <extended:RowDefinitionExtended Height="30" />
          <extended:RowDefinitionExtended Height="35" />
          <!--AC or DC-->
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          <!--Equipment Type-->
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}"/>
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}"/>
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}"/>
          
          <!--Has Transformer-->
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowTransformerFields}" />
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowTransformerFields}"/>
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowTransformerFields}" />
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowTransformerFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowTransformerFields}"/>
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowTransformerFields}" />
          
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          
          <!--Cable-->
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowConductorFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowConductorFields}" />
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowConductorFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowConductorFields}" />
          
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="35*" Visible="{Binding ShowAlternatingCurrentFields}" />
          <extended:RowDefinitionExtended Height="60" Visible="{Binding ShowDirectCurrentFields}"/>
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowDirectCurrentFields}"/>
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowDirectCurrentFields}"/>
          <extended:RowDefinitionExtended Height="35" Visible="{Binding ShowDirectCurrentFields}"/>
          <extended:RowDefinitionExtended Height="20" Visible="{Binding ShowDirectCurrentFields}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="220"/>
          <ColumnDefinition Width="250"/>
          <ColumnDefinition Width="20"/>
          <ColumnDefinition Width="20*"/>
        </Grid.ColumnDefinitions>
        <!--0 and 1 row Personnel -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="0" Grid.Column="0" x:Name="PersonnelTextBlock" Text="{x:Static localString:AppResources.Personnel}"/>
        <TextBox Grid.Row="0" Grid.Column="1" x:Name="PersonnelTextBox" ToolTip="This is a test" Text="{Binding CalculationInput.Personnel, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"/>
        <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" x:Name="PersonnelExample" Grid.ColumnSpan="2" Margin="0,0,21,0"><Run FontStyle="Italic" Text="{x:Static localString:AppResources.Personnel_Example}"/></TextBlock>
        <!--2 and 3 row Location -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="2" Grid.Column="0" x:Name="LocationTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Location}" />
        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding CalculationInput.Location}" x:Name="LocationTextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" />
        <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" x:Name="LocationExampleTextBlock" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="{x:Static localString:AppResources.Location_Example}"/></TextBlock>
        <!--4 and 5 row Action -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="4" Grid.Column="0" x:Name="ActionTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Action}" />
        <TextBox Grid.Row="4" Grid.Column="1"  Text="{Binding CalculationInput.Action}" x:Name="ActionTextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" />
        <TextBlock Grid.Row="5" Grid.Column="1" HorizontalAlignment="Right" x:Name="ActionExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="{x:Static localString:AppResources.Action_Example}"/></TextBlock>
        <!--6 row Date -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="6" Grid.Column="0" x:Name="DateTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Date}" />
        <DatePicker Grid.Row="6" Grid.Column="1" FirstDayOfWeek="Sunday" DisplayDateStart="{Binding StartDate}" x:Name="CalculationDate" SelectedDate="{Binding CalculationInput.CalculationDate, Delay=1000}"
                    extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" />
        <!--7 row voltage type -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="7" Grid.Column="0" x:Name="VoltageTypeTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Voltage_Type}" />
        <TextBlock Grid.Row="7" Grid.Column="0" x:Name="VoltageTypeTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <StackPanel Grid.Row="7" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
          <RadioButton Content="{x:Static localString:AppResources.Voltage_Type_AC}" x:Name="AlternatingCurrentRadio"
	                   extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
	                   IsChecked="{Binding CalculationInput.IsAlternatingCurrent,
	                               Converter={StaticResource BooleanConverter},
                             ConverterParameter='true', Mode=TwoWay}" />
          <RadioButton Content="{x:Static localString:AppResources.Voltage_Type_DC}" Margin="50,0,0,0" x:Name="DirectCurrentRadio"
	                   extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
	                   IsChecked="{Binding CalculationInput.IsAlternatingCurrent,
	                               Converter={StaticResource BooleanConverter},
                             ConverterParameter='false', Mode=TwoWay}" />
        </StackPanel>
        <!-- 8 row EquipmentType -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="8" Grid.Column="0" x:Name="EquipmentTypeTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Equipment_Type}"  />
        <TextBlock Grid.Row="8" Grid.Column="0" x:Name="EquipmentTypeTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <ComboBox Grid.Row="8" Grid.Column="1" x:Name="EquipmentTypeComboBox" Text="Choose..." ItemsSource="{Binding EquipmentTypes}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedItem="{Binding CalculationInput.EquipmentType, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" 
                  extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"/>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Row="8" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=EquipmentTypeComboBox}" />
        <!--9 row Grounding -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="9" Grid.Column="0" x:Name="GroundingTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Grounding_Method}"  />
        <TextBlock Grid.Row="9" Grid.Column="0" x:Name="GroundingTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <StackPanel Grid.Row="9" Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center">
          <RadioButton Content="{x:Static localString:AppResources.Solidly_Grounded}"
                         x:Name="SolidGroundingRadioButton"
                         extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
                   IsChecked="{Binding CalculationInput.IsSolidGround,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='true', Mode=TwoWay}" />
          <RadioButton Content="{x:Static localString:AppResources.Ungrounded}"
                       x:Name="UnGroundedRadioButton"
                       extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
                 IsChecked="{Binding CalculationInput.IsSolidGround,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='false', Mode=TwoWay}" />

        </StackPanel>
        <!--10 and 11 row NominalVoltage -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="10" Grid.Column="0" x:Name="NominalVoltageTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Nominal_Working_Voltage}" />
        <TextBlock Grid.Row="10" Grid.Column="0" x:Name="NominalVoltageTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <TextBox Grid.Row="10" Grid.Column="1" Text="{Binding CalculationInput.NominalVoltage, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="NominalVoltageTextBox"
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"/>
        <TextBlock Grid.Row="10" Grid.Column="3" Style="{StaticResource ErrorMessageTextBlockStyle}" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=NominalVoltageTextBox}" />
        <TextBlock Grid.Row="11" Grid.Column="1" HorizontalAlignment="Right" x:Name="NomialVoltageExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="{x:Static localString:AppResources.Nominal_Voltage_Example}"/></TextBlock>
        <!-- 12 and 13 row Source Fault Current -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="12" Grid.Column="0" x:Name="SourceFaultCurrentTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Source_Fault_Current_amps}" />
        <TextBlock Grid.Row="12" Grid.Column="0" x:Name="SourceFaultCurrentTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}"/>
        <TextBox Grid.Row="12" Grid.Column="1" Text="{Binding CalculationInput.SourceFaultCurrent, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="SourceFaultCurrentTextBox"
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"/>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Row="12" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=SourceFaultCurrentTextBox}" />
        <TextBlock Grid.Row="13" Grid.Column="1" HorizontalAlignment="Right" x:Name="SourceFaultCurrentExample" ><Run FontStyle="Italic" Text="{x:Static localString:AppResources.Source_Fault_Current_Example}"/></TextBlock>
        <!--14 row EquipmentEnclosure -->
        <TextBlock Grid.Row="14" Grid.Column="0" x:Name="EquipmentEnclosureTextBlock" Style="{StaticResource FieldTextBlockStyle}" TextAlignment="Right" Text="{x:Static localString:AppResources.Equipment_Enclosure}"  />
        <TextBlock Grid.Row="14" Grid.Column="0" x:Name="EquipmentEnclosureTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <StackPanel Grid.Row="14" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
          <RadioButton Content="{x:Static localString:AppResources.Open_Air}"
                 x:Name="OpenAirRadioButton"     
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
                 IsChecked="{Binding CalculationInput.IsOpenAir,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='true', Mode=TwoWay}" />
          <RadioButton Content="{x:Static localString:AppResources.In_Box}"
                 x:Name="InBoxRadioButton"
                 Margin="49, 0, 0, 0"
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
                 IsChecked="{Binding CalculationInput.IsOpenAir,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='false', Mode=TwoWay}" />
        </StackPanel>

        <!--15 row UpstreamTransformer -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="15" Grid.Column="0" x:Name="UpstreamTransformerTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Transformer}"  />
        <TextBlock Grid.Row="15" Grid.Column="0" x:Name="VoltageTransformerTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <StackPanel Grid.Row="15" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
          <RadioButton Content="{x:Static localString:AppResources.Upstream_XFR}"
                 x:Name="HasTransformerRadioButton"
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
                 IsChecked="{Binding CalculationInput.HasTransformer,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='true', Mode=TwoWay}" />
          <RadioButton Content="{x:Static localString:AppResources.No_Transformer}"
                 x:Name="NoTransformerRadioButton"
                 Margin="11,0,0,0"
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
                 IsChecked="{Binding CalculationInput.HasTransformer,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='false', Mode=TwoWay}" />
        </StackPanel>
        <!--16 and 17 row Primary Voltage -->
        <TextBlock Grid.Row="16" Style="{StaticResource FieldTextBlockStyle}" Grid.Column="0" x:Name="PrimaryVoltageTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Primary_Voltage}" />
        <TextBlock Grid.Row="16" Grid.Column="0" x:Name="PrimaryVoltageTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <TextBox Grid.Row="16" Grid.Column="1" Text="{Binding CalculationInput.PrimaryVoltage, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="PrimaryVoltageTextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" IsEnabled="{Binding EnableTransformerFields}"/>
        <TextBlock Grid.Row="16" Grid.Column="3" Style="{StaticResource ErrorMessageTextBlockStyle}" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=PrimaryVoltageTextBox}" />
        <TextBlock Grid.Row="17" Grid.Column="1" HorizontalAlignment="Right" x:Name="PrimaryVoltageExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="{x:Static localString:AppResources.Primary_Voltage_Example}"/></TextBlock>
        <!--18 and 19 row Xfr Impedence -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="18" Grid.Column="0" x:Name="XfmrImpedanceTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Transformer_Impedence}" />
        <TextBlock Grid.Row="18" Grid.Column="0" x:Name="XfmrImpedanceTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <TextBox Grid.Row="18" Grid.Column="1" Text="{Binding CalculationInput.XfmrImpedance, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="XfmrImpedanceTextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" IsEnabled="{Binding EnableTransformerFields}"/>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Row="18" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=XfmrImpedanceTextBox}" />
        <TextBlock Grid.Row="19" Grid.Column="1" HorizontalAlignment="Right" x:Name="XfmrImpedanceExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="Example: 5.75"/></TextBlock>
        <!--20 and 21 row Xfr KVA -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="20" Grid.Column="0" x:Name="XfmrKVATextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Transformer_KVA}" />
        <TextBlock Grid.Row="20" Grid.Column="0" x:Name="XfmrKVATextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <TextBox Grid.Row="20" Grid.Column="1" Text="{Binding CalculationInput.XfmrKVA, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="XfmrKVATextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" IsEnabled="{Binding EnableTransformerFields}"/>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Row="20" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=XfmrKVATextBox}" />
        <TextBlock Grid.Row="21" Grid.Column="1" HorizontalAlignment="Right" x:Name="XfmrKVAExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="Example: 500"/></TextBlock>

        <!--22 row VoltageConductor -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="22" Grid.Column="0" x:Name="VoltageConductorTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Conductor}" />
        <TextBlock Grid.Row="22" Grid.Column="0" x:Name="VoltageconductorTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <StackPanel Grid.Row="22" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
          <RadioButton Content="{x:Static localString:AppResources.Cable}"
                 x:Name="HasCableRadioButton"
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
                 IsChecked="{Binding CalculationInput.HasCable,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='true', Mode=TwoWay}" />
          <RadioButton Content="{x:Static localString:AppResources.No_Cable}"
                   x:Name="NoCableRadioButton"
                   Margin="67, 0, 0, 0"
                   extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"
                   IsChecked="{Binding CalculationInput.HasCable,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='false', Mode=TwoWay}" />
        </StackPanel>

        <!--23 row Conductor Size -->
        <TextBlock Grid.Row="23" Style="{StaticResource FieldTextBlockStyle}" Grid.Column="0" x:Name="ConductorSizeTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Conductor_Size}"  />
        <TextBlock Grid.Row="23" Grid.Column="0" x:Name="ConductorSizeTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <ComboBox Grid.Row="23" Grid.Column="1" x:Name="ConductorSizeComboBox" Text="Choose..." ItemsSource="{Binding ConductorSizes}" DisplayMemberPath="Size" SelectedValuePath="Id" SelectedItem="{Binding CalculationInput.ConductorSize, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                  extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" IsEnabled="{Binding EnableCableFields}"/>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Row="23" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=ConductorSizeComboBox}" />
        <!--24 and 25 row Conductors/phase -->
        <TextBlock Grid.Row="24" Style="{StaticResource FieldTextBlockStyle}" Grid.Column="0" x:Name="ConductorPerPhaseTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Conductors_per_Phase}" />
        <TextBlock Grid.Row="24" Grid.Column="0" x:Name="ConductorPerPhaseTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <TextBox Grid.Row="24" Grid.Column="1" Text="{Binding CalculationInput.ConductorPerPhase, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="ConductorPerPhaseTextBox"
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" IsEnabled="{Binding EnableCableFields}"/>
        <TextBlock Grid.Row="24" Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=ConductorPerPhaseTextBox}" />
        <TextBlock Grid.Row="25" Grid.Column="1" HorizontalAlignment="Right" x:Name="ConductorPerPhaseExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="{x:Static localString:AppResources.Conductor_Per_Phase_Example}"/></TextBlock>
        <!--26 row Conductor Length -->
        <TextBlock Grid.Row="26" Style="{StaticResource FieldTextBlockStyle}" Grid.Column="0" x:Name="ConductorLengthTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Conductor_Length}" />
        <TextBlock Grid.Row="26" Grid.Column="0" x:Name="ConductorLengthTextBlockStar" Style="{StaticResource AsterixStyle}" Margin="0,8,5,29" Grid.RowSpan="2" Text="{x:Static localString:AppResources.Star}" />
        <TextBlock Grid.Row="26" Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=ConductorLengthTextBox}" />
        <TextBox Grid.Row="26" Grid.Column="1" Text="{Binding CalculationInput.ConductorLength, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="ConductorLengthTextBox" 
                   extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" IsEnabled="{Binding EnableCableFields}"/>
        <!--<TextBlock Grid.Row="19" Grid.Column="1" HorizontalAlignment="Right" x:Name="ConductorLengthExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="Example: 6"/></TextBlock>-->
        <!--27 and 28 row Sensor Rating -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="27" Grid.Column="0" x:Name="SensorRatingTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Sensor_Rating}" />
        <TextBox Grid.Row="27" Grid.Column="0" Text="{Binding CalculationInput.SensorRating, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="SensorRatingTextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus" Grid.ColumnSpan="2" Margin="219,10,1,0"/>
        <TextBlock Grid.Row="28" Grid.Column="1" HorizontalAlignment="Right" x:Name="SensorRatingExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="{x:Static localString:AppResources.Sensor_Rating_Example}"/></TextBlock>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyleSensor}" Grid.Row="27" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=SensorRatingTextBox}" />

        <!--29 MultipleOfSensorRating -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="29" Grid.Column="0" x:Name="MultipleOfSensorRatingTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Multiple_Of_Sensor_Rating}" />
        <TextBox Grid.Row="29" Grid.Column="1" Text="{Binding CalculationOutput.MultipleOfSensorRating, StringFormat=N2}" x:Name="MultipleOfSensorRatingTextBox" IsEnabled="False"/>
        <!--30 Estimated Arc Flash Current -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="30" Grid.Column="0" x:Name="EstimatedArcFlashCurrentTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Estimated_Arc_Fault_Current_amps}" />
        <TextBox IsEnabled="False" Grid.Row="30" Grid.Column="1" Text="{Binding EstimatedArcFaultCurrentInAmps, StringFormat=N2}" x:Name="EstimatedArcFlashCurrentTextBox" />
        <!--31 and 32 row ArcDuration -->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="31" Grid.Column="0" x:Name="ArcDurationTextBlock" TextAlignment="Right" Text="{x:Static localString:AppResources.Arc_Duration_seconds}" />
        <TextBlock Grid.Row="31" Grid.Column="0" x:Name="ArcDurationTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <TextBox Grid.Row="31" Grid.Column="1" Text="{Binding CalculationInput.ArcDurationValue}" x:Name="ArcDurationTextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus">
        </TextBox>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Row="31" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=ArcDurationTextBox}" />
        <TextBlock Grid.Row="32" Grid.Column="1" HorizontalAlignment="Right" x:Name="ArcDurationExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="Example: 0.5"/></TextBlock>
        <!-- 33 Row Calculate Arc Duration -->
        <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="33" Visibility="{Binding HasEstimatedArcFaultCurrent, Converter={StaticResource BoolToVisibilityConverter}}">
          <Button Content="Calculate Arc Duration" Command="{Binding CalculateArcDurationCommand}" Width="200" HorizontalAlignment="Right"></Button>
          <Button Height="Auto" Command="{Binding FindEquipmentTripCurvesCommand}" Background="White" BorderBrush="White" Cursor="Hand" Width="Auto">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
              <Path Stroke="#FF83C7FE" Fill="#FF83C7FE" Margin="0,0,3,0" Data="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z" />
              <TextBlock VerticalAlignment="Center" Text="{x:Static localString:AppResources.Find_Equipment_Trip_Curves}" TextDecorations="Underline" Foreground="#FF69BBFD"></TextBlock>
            </StackPanel>
          </Button>
        </StackPanel>
        <!--34 and 35 Max Avail Short Circuit-->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="34" Grid.Column="0" x:Name="MaximumShortCircuitAvailableTextBlock" TextAlignment="Right" TextWrapping="Wrap" Text="{x:Static localString:AppResources.Maximum_Available_Short_Circuit}" Width="150" VerticalAlignment="Center" />
        <TextBlock Grid.Row="34" Grid.Column="0" x:Name="MaximumShortCircuitAvailableTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <TextBox Grid.Row="34" Grid.Column="1" Text="{Binding CalculationInput.MaximumShortCircuitAvailable, Delay=500, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="MaximumShortCircuitAvailableTextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"/>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Row="34" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=MaximumShortCircuitAvailableTextBox}" />
        <TextBlock Grid.Row="35" Grid.Column="1" HorizontalAlignment="Right" x:Name="MaximumShortCircuitAvailableExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="Example: 1000"/></TextBlock>
        <!--36 Battery Enclosure-->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="36" Grid.Column="0" x:Name="BatteryEnclosureTextBlock" TextAlignment="Right" Text="Battery Enclosure?" />
        <TextBlock Grid.Row="36" Grid.Column="0" x:Name="BatteryEnclosureTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <StackPanel Grid.Row="36" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
          <RadioButton Content="{x:Static localString:AppResources.Open_Air}"
                x:Name="DirectCurrentOpenAirRadioButton"       
                IsEnabled="{Binding CalculationInput.IsAlternatingCurrent, Converter={StaticResource BooleanConverter}, ConverterParameter='false'}"
                IsChecked="{Binding CalculationInput.InCabinet,
                Converter={StaticResource BooleanConverter},
                ConverterParameter='false', Mode=TwoWay}" 
                extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"/>
          <RadioButton Content="{x:Static localString:AppResources.In_Box}" Margin="21,0,0,0"
                 x:Name="DirectCurrentInCabinetRadioButton"
                 IsChecked="{Binding CalculationInput.InCabinet,
                             Converter={StaticResource BooleanConverter},
                             ConverterParameter='true', Mode=TwoWay}" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"/>
        </StackPanel>
        <!--37 and 38 Battery Enclosure-->
        <TextBlock Style="{StaticResource FieldTextBlockStyle}" Grid.Row="37" Grid.Column="0" x:Name="VoltageOfBatteryTextBlock" TextAlignment="Right" Text="Battery String Voltage(volts) " />
        <TextBlock Grid.Row="37" Grid.Column="0" x:Name="VoltageOfBatteryTextBlockStar" Style="{StaticResource AsterixStyle}" Text="{x:Static localString:AppResources.Star}" />
        <TextBox Grid.Row="37" Grid.Column="1" Text="{Binding CalculationInput.VoltageOfBattery, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource DecimalConverter}}" x:Name="VoltageOfBatteryTextBox" 
                 extended:Adorners.Template="{StaticResource PopupTemplate}" GotFocus="GotFocus" LostFocus="LostFocus"/>
        <TextBlock Style="{StaticResource ErrorMessageTextBlockStyle}" Grid.Row="37" Grid.Column="3" Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=VoltageOfBatteryTextBox}" />
        <TextBlock Grid.Row="38" Grid.Column="1" HorizontalAlignment="Right" x:Name="VoltageOfBatteryExample" Grid.ColumnSpan="2" Margin="0,0,21,0" ><Run FontStyle="Italic" Text="Example: 240"/></TextBlock>
      </Grid>
    </controls:CustomScrollViewer>
  </Grid>
</UserControl>
